spring:
  application:
    name: TelegramBotWebhook
  datasource:
    url: jdbc:mysql://localhost:3306/telegrambot?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
    username: botuser
    password: botpassword
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
  sql:
    init:
      mode: never
      data-locations: classpath:import.sql
      continue-on-error: true  # 若有錯誤繼續執行
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: telegram-bot-group
      auto-offset-reset: earliest

kafka:
  topic:
    cache-clear: bot-cache-clear       # 現有主題，用於清除所有快取
    bot-update: bot-update             # 新增主題，用於通知特定 Bot 更新
    webhook-registered: webhook-registered  # 新增主題，用於 webhook 註冊通知

# 配置日誌層級
logging:
  level:
    root: INFO
    org.springframework: INFO
    com.example.telegrambotwebhook: DEBUG
    org.hibernate.SQL: DEBUG

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    disable-swagger-default-url: true
    urls[0].url: /api-docs
    urls[0].name: API V1

#telegram-bot:
#  webhookDomain: https://0b5b-106-105-244-78.ngrok-free.app
#  registerPath: /webhook
telegram-bot:
  webhookDomain: ${TELEGRAM_BOT_WEBHOOK_DOMAIN:https://9404-106-105-244-78.ngrok-free.app}
  registerPath: /webhook