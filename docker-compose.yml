version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: telegram-bot-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: telegrambot
      MYSQL_USER: botuser
      MYSQL_PASSWORD: botpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: telegram-bot-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: telegram-bot-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  app-node-1:
    build: .
    container_name: telegram-bot-app-1
    restart: always
    environment:
      SPRING_APPLICATION_NAME: telegram-bot-app-1
      TELEGRAM_BOT_WEBHOOK_DOMAIN: https://1b16-106-105-244-78.ngrok-free.app
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/telegrambot?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      - mysql
      - kafka

  app-node-2:
    build: .
    container_name: telegram-bot-app-2
    restart: always
    environment:
      SPRING_APPLICATION_NAME: telegram-bot-app-2
      TELEGRAM_BOT_WEBHOOK_DOMAIN: https://1b16-106-105-244-78.ngrok-free.app
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/telegrambot?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      - mysql
      - kafka

  nginx:
    image: nginx:latest
    container_name: telegram-bot-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app-node-1
      - app-node-2

  ngrok:
    image: ngrok/ngrok:latest
    container_name: telegram-bot-ngrok
    ports:
      - "4040:4040"
    environment:
      NGROK_AUTHTOKEN: 2hDwgSkQll0INonwZW1S5RZROMN_QH4C9NRBRC1Sz1RWqGsR
    command: http nginx:80 --log=stdout
    depends_on:
      - nginx
    healthcheck:
      test: [ "CMD", "wget", "-q", "--spider", "http://localhost:4040/api/tunnels" ]
      interval: 5s
      timeout: 3s
      retries: 5
volumes:
  mysql-data: